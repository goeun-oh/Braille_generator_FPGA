import torch

# === Conv2 Weights === (Ïó¨Í∏∞ÏÑ† ÏòàÏãúÎ°ú Î∂àÎü¨Ïò§Í∏∞Îßå Ìï®)
conv2_weights = torch.tensor(
    [[[[0.2592, 0.0712, 0.0715, -0.0580, 0.0023],
              [0.2311, 0.1724, -0.1054, 0.2066, 0.2696],
              [0.1158, 0.0411, 0.2065, 0.3031, 0.3592],
              [0.1499, 0.2090, 0.2459, 0.2897, 0.2585],
              [-0.0133, 0.0900, 0.0635, -0.0385, -0.0221]],
             [[0.1137, 0.1231, 0.1111, 0.1404, 0.2687],
              [0.1210, -0.0417, 0.1161, 0.2051, 0.1154],
              [-0.2439, 0.1009, -0.0055, 0.0110, 0.1335],
              [-0.1489, -0.0715, -0.1878, -0.1183, -0.0183],
              [-0.2312, -0.2451, -0.0377, -0.1718, -0.1398]],
             [[0.0295, -0.1335, 0.0305, -0.0602, -0.0554],
              [0.2743, -0.2187, -0.2796, -0.1247, 0.1965],
              [0.2387, 0.2164, 0.1097, 0.3045, 0.3437],
              [0.3677, 0.3251, 0.3557, 0.2930, 0.2443],
              [0.3595, 0.4071, 0.2222, -0.0350, -0.0430]]],
            [[[-0.1237, -0.2287, -0.2918, -0.0458, -0.1907],
              [-0.2162, -0.2087, -0.0187, 0.0290, 0.0375],
              [-0.0691, -0.0302, -0.0080, -0.0522, 0.1312],
              [0.0865, 0.0529, -0.1573, -0.0454, 0.0332],
              [0.1930, 0.0527, 0.1166, -0.0421, 0.1244]],
             [[-0.0041, -0.2357, -0.0787, 0.1704, 0.0813],
              [0.0986, 0.0840, -0.0510, 0.0084, 0.2955],
              [0.2652, 0.0935, 0.0479, 0.0579, 0.2364],
              [0.2606, 0.2075, 0.2360, 0.0723, 0.1834],
              [0.4022, 0.1996, 0.2317, 0.1236, 0.0708]],
             [[-0.2238, 0.0464, -0.0619, -0.1580, -0.4147],
              [-0.2716, -0.1588, 0.0247, -0.0309, -0.3717],
              [-0.3569, -0.3113, -0.0601, 0.0496, 0.0399],
              [-0.5184, -0.4376, -0.4133, -0.2760, -0.2177],
              [-0.3189, -0.3563, -0.3204, -0.3664, -0.0879]]],
            [[[-0.0726, 0.0422, 0.0626, 0.1008, -0.0765],
              [-0.0648, -0.1228, -0.0185, 0.0808, 0.0234],
              [-0.0309, 0.0880, 0.0239, -0.0979, 0.0564],
              [0.0055, -0.1021, 0.0080, 0.0100, -0.0107],
              [-0.0768, -0.1091, -0.1176, 0.0032, -0.0478]],
             [[0.0858, 0.0830, -0.0584, -0.0989, 0.0354],
              [-0.1199, 0.0478, -0.1170, -0.0730, 0.0468],
              [-0.0674, -0.0596, -0.0013, -0.0062, -0.0791],
              [-0.0726, 0.0252, 0.0043, 0.0175, -0.0742],
              [-0.0150, -0.0348, -0.0256, 0.0174, -0.1215]],
             [[0.0413, 0.0130, 0.0275, -0.1187, -0.0725],
              [-0.1053, 0.0121, 0.0139, -0.0512, -0.0700],
              [0.0062, 0.0559, -0.0301, -0.0066, -0.1207],
              [0.0778, -0.0234, 0.0898, -0.1014, 0.0780],
              [-0.0589, 0.0113, 0.0741, -0.0934, -0.0371]]]], dtype=torch.float32)


# ===== 2. FC1 Weight: ÏßÅÏ†ë Î∞∞Ïó¥Î°ú Ï†ïÏùò =====
fc1_array = [
    [0.0358, -0.0892, -0.1154, 0.2058, 0.2404, 0.0259, -0.1440, 0.0059,
     0.2153, -0.1251, -0.1559, 0.0405, 0.1184, -0.1408, -0.2498, 0.0234,
     0.0066, -0.0768, 0.0770, 0.0476, 0.0091, 0.1527, -0.1512, -0.0963,
     -0.1414, 0.0247, -0.0792, -0.2076, 0.2913, 0.0852, 0.2078, -0.0901,
     0.1050, -0.0120, -0.0286, 0.0388, -0.1076, 0.1021, -0.1197, -0.0495,
     0.0179, 0.0120, -0.1090, -0.1356, 0.0408, -0.0453, 0.0429, 0.0946],
    [-0.1567, 0.1298, 0.2034, 0.0122, -0.0825, -0.0784, 0.1906, 0.1770,
     -0.0039, -0.1989, 0.0416, -0.1426, 0.0703, 0.0728, 0.1167, -0.1333,
     0.0852, 0.0266, 0.1161, -0.0150, 0.1577, -0.1318, -0.1142, -0.0008,
     0.2083, 0.0231, -0.1867, 0.0559, -0.1664, -0.0917, -0.1456, -0.1681,
     0.0595, 0.1351, -0.0901, 0.0638, -0.1194, 0.0442, 0.0220, 0.0419,
     0.0706, 0.0397, -0.0872, 0.1021, -0.0406, -0.1114, 0.0385, -0.1103],
    [0.1582, -0.0269, -0.1086, -0.0754, -0.1537, -0.0654, -0.0743, -0.1402,
     -0.0544, 0.1673, 0.1356, 0.0997, -0.1909, -0.1407, -0.0803, 0.0386,
     0.0003, -0.0249, 0.0890, -0.0099, -0.2609, 0.1044, 0.2266, 0.1749,
     -0.0273, 0.0117, 0.1234, 0.1758, -0.0406, -0.1432, 0.0826, -0.1058,
     0.0456, -0.0198, -0.0950, 0.0574, -0.0639, -0.0173, 0.0196, -0.1012,
     0.1156, 0.0139, -0.0454, -0.1070, -0.0792, -0.1303, -0.0382, 0.1213]
]

fc1_weights = torch.tensor(fc1_array, dtype=torch.float32)


# === 2. Î≤îÏúÑ Ï†ïÎ≥¥ Ï∂úÎ†• ===
min_val = conv2_weights.min().item()
max_val = conv2_weights.max().item()
print(f"üí° ÏõêÎ≥∏ weight Î≤îÏúÑ: {min_val:.4f} ~ {max_val:.4f}")

# === 3. Ï†ïÍ∑úÌôî ÏóÜÏù¥ Ïä§ÏºÄÏùºÎßÅ: int8 Î≤îÏúÑÎ°ú Îß§Ìïë
scaled = (conv2_weights * 128).round().clamp(-128, 127).to(torch.int8)

# === 4. Í≤∞Í≥º Ï∂úÎ†• ===
print("\n=== [Int8 Quantized Weights without normalization] ===")
for out_ch in range(scaled.shape[0]):
    for in_ch in range(scaled.shape[1]):
        print(f"\n[Output {out_ch}, Input {in_ch}]")
        for row in scaled[out_ch, in_ch]:
            print(" ".join(f"{v.item():4d}" for v in row))


# === 2. Í≤∞Í≥º Ï∂úÎ†• ===
print("\n=== [Int8 Quantized Weights] ===")
for out_ch in range(conv2_weights.shape[0]):
    for in_ch in range(conv2_weights.shape[1]):
        print(f"\n[Output {out_ch}, Input {in_ch}]")
        for row in conv2_weights[out_ch, in_ch]:
            print(" ".join(f"{v.item()*128:4d}" for v in row))

# === ÏÇ¨Ïö©Ïûê ÏßÄÏ†ï ÏñëÏûêÌôî Î≤îÏúÑ
min_val_fc1 = fc1_weights.min().item()
max_val_fc1 = fc1_weights.max().item()
print(f"\nüí° [FC1] ÏÇ¨Ïö©Ïûê ÏßÄÏ†ï Î≤îÏúÑ: {min_val_fc1} ~ {max_val_fc1}")

norm_fc1 = (fc1_weights - min_val_fc1) / (max_val_fc1 - min_val_fc1)
clipped_fc1 = torch.clamp(norm_fc1, 0, 1)
scaled_fc1 = clipped_fc1 * 255 - 128
int8_fc1 = torch.round(scaled_fc1).to(torch.int8)

print("\n=== [Int8 Quantized FC1 Weights] ===")
print("model.fc1.weight.data = torch.tensor([")

for row in int8_fc1:
    print("    [" + ", ".join(f"{v.item():4d}" for v in row) + "],")

print("], dtype=torch.float32)")